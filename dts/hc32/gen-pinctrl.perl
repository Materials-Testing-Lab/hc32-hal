#!/usr/bin/perl

use v5.34;
use utf8;
use warnings;
use feature qw(signatures);

open HEADER, '<', './hc32l19x-pinctrl.h';
open DTSI, '>', './hc32l19x-pinctrl.dtsi';

sub print_with_indent($s, $n) {
    say DTSI ("\t" x $n) . $s;
}

say DTSI '/* Generated by gen-pinctrl.perl, do not edit this file. */';
say DTSI '#include <hc32/hc32l19x-pinctrl.h>';
say DTSI "/ {\n\tsoc {\n\t\tpinctrl: pin-controller@40020c00 {";

while (<HEADER>) {
    if (/#define (P([A-F])(\d{2})_(\w+)_(\w+)).*/) {
	my $lbl = lc(sprintf "%s_%s_p%s%d", $4, $5, $2, $3);
	print_with_indent("/omit-if-no-ref/ $lbl: $lbl {", 3);
	print_with_indent("pinmux = <$1>;", 4);
	if ($lbl =~ /i2c\d/i) {
	    print_with_indent("bias-pull-up;", 4);
	    print_with_indent("drive-open-drain;", 4);
	}
	if ($lbl =~ /spi\d/i) {
	    print_with_indent("bias-pull-down;", 4);
	}
	if ($lbl =~ /uart.*rx.*/i) {
	    print_with_indent("input-enable;", 4);
	}
	print_with_indent("};", 3);
    }
}

foreach my $p ("A", "B", "C", "D", "E", "F") {
    foreach my $i (0..15) {
	my $lbl = lc("analog_p$p$i");
	print_with_indent("/omit-if-no-ref/ $lbl: $lbl {", 3);
	print_with_indent("pinmux = <PINMUX(GpioPort$p, GpioPin$i, GpioAfa)>;", 4);
	print_with_indent("};", 3);
    }
}

say DTSI "\t\t};\n\t};\n};";
